@model RegisteredBikeViewModel
@using System.Security.Claims
<html>
<head>
    <title>Bike Rental</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <style>
        .wishlist-icon i {
            font-size: 1.5rem; /* Adjust the size of the heart icon */
            cursor: pointer;
            transition: color 0.3s ease;
        }

            .wishlist-icon i:hover {
                color: red; /* Change color on hover */
            }

        .disabled {
            cursor: not-allowed;
        }
    </style>
    
</head>
    <body class="bg-gray-100">
        <div class="container mx-auto p-4">
            <div class="flex">
                <div class="w-1/4 h-auto p-4 bg-white rounded-lg shadow-lg">
                    <div class="flex items-center mb-4">
                        <h1 class="text-xl font-bold">Filter</h1>
                    </div>
                <form method="get" asp-action="DisplayBikes">
                    <input type="text" hidden name="SearchLocation" value="@ViewBag.Location" />
                        <div class="mb-4">
                            <h2 class="font-semibold">Select By Location</h2>
                            <div class="relative mt-2">
                                <input class="w-full p-2 border rounded-lg"
                                       type="text" name="SearchAddress"
                                       placeholder="Search by Address"
                                       value="@Context.Request.Query["SearchAddress"]" />
                                <i class="fas fa-search absolute top-3 right-3 text-gray-400"></i>
                            </div>
                            <div class="mt-2">
                                @if (Model?.BikesAddress != null && Model.BikesAddress.Any())
                                {
                                    @foreach (var address in Model.BikesAddress)
                                    {
                                        <label class="block">
                                            <input class="mr-2" type="checkbox" name="SelectedAddresses" value="@address" 
                                                @(Context.Request.Query["SelectedAddresses"].Contains(address) ? "checked" : "")/>
                                            @address
                                        </label>
                                    }
                                }
                                else
                                {
                                    <p>No bikes available at this location.</p>
                                }
                            </div>
                        </div>
                        <div class="mb-4">
                            <h2 class="font-semibold">Select By Model</h2>
                            <div class="relative mt-2">
                                <input class="w-full p-2 border rounded-lg"
                                       type="text" name="SearchModel"
                                       placeholder="Search by Bike Model"
                                       value="@Context.Request.Query["SearchModel"]" />
                                <i class="fas fa-search absolute top-3 right-3 text-gray-400"></i>
                            </div>
                            <div class="mt-2">
                                @if (Model?.BikeModels != null && Model.BikeModels.Any())
                                {
                                    @foreach (var modelBike in Model.BikeModels)
                                    {
                                        <label class="block">
                                            <input class="mr-2" type="checkbox" name="SelectedModels" value="@modelBike"
                                            @(Context.Request.Query["SelectedModels"].Contains(modelBike) ? "checked" : "") />
                                            @modelBike
                                        </label>
                                    }
                                }
                                else
                                {
                                    <p>No bikes available for this model.</p>
                                }
                            </div>
                        </div>

                        <button class="w-full bg-orange-500 text-white py-2 rounded-lg">Apply Filter</button>
                    </form>
                </div>
                <div class="w-3/4 p-4">
                    <h1 class="text-2xl font-bold mb-4">Available Bikes</h1>
                    <div class="grid grid-cols-4 gap-4">
                        @if (Model?.Bikes != null && Model.Bikes.Any())
                        {
                            foreach (var bike in Model.Bikes)
                            {
                                var isInWishlist = Model.UserWishlist.Contains(bike.BikeId);

                                <form asp-action="Date" asp-controller="RentRide" method="get"  >
                                    <input type="hidden" name="BikeId" value="@bike.BikeId" />
                                    <div class="bg-white p-4 rounded shadow-md relative">
                                    <div class="absolute top-2 right-2">
                                        <i class="fas fa-heart @(isInWishlist ? "text-orange-600" : "text-gray-600") cursor-pointer"
                                           data-bike-id="@bike.BikeId"
                                           onclick="addToWishlist(this)" ></i>

                                    </div>
                                        <img alt="Bike Image"
                                             src="@(bike.BikeImageBytes != null ? $"data:image/png;base64,{Convert.ToBase64String(bike.BikeImageBytes)}" : "/images/default-profile.png")"
                                             class="w-full h mb-4" style="height:120px;" />
                                        <h3 class="text-xl font-bold mb-1">@bike.BikeModel</h3>
                                        <p class="text-gray-600">Location: @bike.BikeLocation</p>
                                        <p class="text-gray-600">Address: @bike.BikeAddress</p>
                                        <p class="text-gray-600">Price/Hour: @bike.BikeRentPrice</p>
                                        <p class="text-gray-600">Available Upto: @bike.AvailableUpto.ToString("dd/MM/yyyy")</p>
                                        @{
                                            if(@bike.Available)
                                            {
                                                        <p class="text-green-600 flex justify-content-center"> Available</p>
                                                        <button class="w-full bg-orange-500 text-white py-2 mt-2 rounded-lg">Book Now</button>
                                            }
                                            else
                                            {
                                                        <p class="text-red-600 flex justify-content-center">Not available</p>
                                                        <button class="w-full bg-gray-400 text-white py-2 mt-2 rounded-lg" disabled>Book Now</button>
                                            }
                                         }  
                                    </div>

                                </form>
                            }
                        }
                        else
                        {
                            <p class="text-gray-500 text-center col-span-2">No bikes found for the selected filters.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    <script>
        function addToWishlist(iconElement) {
            const bikeId = $(iconElement).data('bike-id'); // Correct variable name formatting

            if (!bikeId) {
                alert('Invalid bike ID.');
                return;
            }

            $.ajax({
                url: '@Url.Action("AddToWishlist", "WishList")',
                method: 'POST',
                data: { bikeId: bikeId },
                success: function (response) {
                    alert(response.message || 'Bike added to your wishlist!');
                    $(iconElement).css('color', 'Orange');
                },
                error: function (xhr) {
                    const errorMessage = xhr.responseJSON?.message || 'Error adding bike to wishlist.';
                    alert(errorMessage);
                }
            });
        }
    </script>

    </body>
</html>


